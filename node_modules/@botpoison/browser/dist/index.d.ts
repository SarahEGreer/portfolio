declare global {
    interface Window {
        __BOTPOISON_VERSION__: string | undefined;
        __BOTPOISON_SUBMIT_LISTENER__: boolean | undefined;
        __BOTPOISON_HEARTBEAT_DISPATCHER__: boolean | undefined;
    }
}
declare type BotpoisonOptions = {
    publicKey: string;
};
declare type ChallengeOptions = {
    onProgress?: ProgressCallback;
};
export declare type ProgressCallback = (progress: number) => void;
export declare type SignedChallenge = {
    payload: {
        nonce: string;
        difficulty: number;
        hardness: number;
    };
};
export default class Botpoison {
    private readonly publicKey;
    constructor({ publicKey }: BotpoisonOptions);
    static init(): void;
    challenge(options?: ChallengeOptions): Promise<{
        solution: string;
    }>;
}
export {};
